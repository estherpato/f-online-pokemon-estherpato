{"version":3,"sources":["components/PokeCard.js","components/PokeList.js","components/FilterInput.js","components/Home.js","components/PokeDetail.js","components/App.js","index.js"],"names":["PokeCard","_this$props","this","props","name","id","image","types","evolution","evolvesFromName","concat","react_default","a","createElement","className","src","alt","title","map","type","i","key","Component","PokeList","pokeArray","pokemonFiltered","inputValue","arrayOnScreen","length","pokemon","Link","to","components_PokeCard","sprites","front_default","species","evolves_from_species","FilterInput","labelClass","fillInput","htmlFor","value","onChange","findMatches","Home","components_FilterInput","components_PokeList","PokeDetail","match","evolutionChain","filterID","parseInt","params","myPokemon","filter","item","firstEvolution","evolution_chain","chain","evolves_to","secondEvolution","react","back_default","height","weight","abilities","ability","evoChain","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","bind","assertThisInitialized","hideLabel","_this2","pokemonsFromFetch","fetch","then","res","json","data","push","getSpecies","url","catch","error","console","log","message","_this3","getEvoChain","_this4","setPokeArray","pokeArraySorted","sort","b","pokeSpeciesSorted","pokeChainSorted","pokeArrayCompleted","objectSpread","setItem","stringify","setState","pokemons","event","e","valueOnInput","target","includes","toLowerCase","_this5","_this$state","Switch","Route","exact","path","render","components_Home","components_PokeDetail","ReactDOM","HashRouter","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c589d9c1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/PokeCard.css';\n\nclass PokeCard extends Component {\n    render() {\n        const { name, id, image, types, evolution } = this.props;\n        let evolvesFromName = evolution !== null ? `Evolves from ${evolution.name}` : '';\n        return (\n            <div className=\"card-container\">\n                <div className=\"img-container\">\n                    <img\n                        src={image}\n                        alt={name}\n                        title={name}\n                        className=\"poke-img\"\n                    />\n                    <span className=\"id-container\">ID / {id}</span>\n                </div>\n                <div className=\"info-container\">\n                    <p className=\"poke-name\">{name}</p>\n                    <ul className=\"class-info\">\n                        {types.map((type, i) => {\n                            return (\n                                <li\n                                    key={i}\n                                    className={`class-info__item ${type.type.name}`}\n                                >\n                                    {type.type.name}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                    <div className=\"evolution-info\">\n                        <span\n                            className=\"evolution-info__text\"\n                        >\n                            {evolvesFromName}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPokeCard.propTypes = {\n    name: PropTypes.string,\n    id: PropTypes.number,\n    image: PropTypes.string,\n    types: PropTypes.array,\n    evolution: PropTypes.object,\n}\n\nexport default PokeCard;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PokeCard from './PokeCard.js';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/PokeList.css';\n\nclass PokeList extends Component {\n    render() {\n        const { pokeArray, pokemonFiltered, inputValue } = this.props;\n        let arrayOnScreen = pokemonFiltered.length === 0 ? pokeArray : pokemonFiltered;\n\n        if (pokemonFiltered.length === 0 && inputValue !== '') {\n            return (\n                <div\n                    className=\"invalid-search\"\n                >\n                    Por favor, introduce una búsqueda válida ϞϞ(๑⚈ ․̫ ⚈๑)∩\n                </div>\n            );\n        }\n        else {\n            return (\n                <ul className=\"poke-list\">\n                    {arrayOnScreen.map((pokemon) => {\n                        return (\n                            <li key={pokemon.id}>\n                                <Link to={`/pokemon/${pokemon.id}`}>\n                                    <PokeCard\n                                        name={pokemon.name}\n                                        id={pokemon.id}\n                                        image={pokemon.sprites.front_default}\n                                        types={pokemon.types}\n                                        evolution={pokemon.species.evolves_from_species}\n                                    />\n                                </Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n            );\n        }\n    }\n}\n\nPokeList.propTypes = {\n    pokeArray: PropTypes.array,\n    pokemonFiltered: PropTypes.array,\n    inputValue: PropTypes.string,\n}\n\nexport default PokeList;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/FilterInput.css';\n\nclass FilterInput extends Component {\n    render() {\n        let labelClass = this.props.fillInput ? 'input-label--hidden' : 'input-label'\n\n        return (\n            <div className=\"input-form\">\n                <label\n                    htmlFor=\"searchbar\"\n                    className={labelClass}\n                >\n                    Filter Pokemons by name...\n                </label>\n                <input\n                    className=\"input\"\n                    type=\"text\"\n                    id=\"searchbar\"\n                    name=\"searchbar\"\n                    value={this.props.inputValue}\n                    onChange={this.props.findMatches}\n                />\n            </div>\n        );\n    }\n}\n\nFilterInput.propTypes = {\n    inputValue: PropTypes.string,\n    findMatches: PropTypes.func.isRequired\n}\n\nexport default FilterInput;","import React, { Component } from 'react';\nimport PokeList from './PokeList.js';\nimport FilterInput from './FilterInput.js';\nimport PropTypes from 'prop-types';\n\nclass Home extends Component {\n    render() {\n        const {\n            pokeArray,\n            pokemonFiltered,\n            value,\n            fillInput,\n            findMatches,\n        } = this.props;\n\n        if (pokeArray.length < 25) {\n            return (\n                <div className=\"loading-container\">\n                    <img\n                        src=\"https://vignette.wikia.nocookie.net/animal-jam-clans-1/images/f/f6/Pikachu_Themed_Page.gif\"\n                        alt=\"Pikachu gif de espera\"\n                    />\n                    <span className=\"loading-text\">\n                        Cargando tus 25 Pokemons...\n                    </span>\n                </div>\n            );\n        } else {\n            return (\n                <main>\n                    <FilterInput\n                        findMatches={findMatches}\n                        fillInput={fillInput}\n                        inputValue={value}\n                    />\n                    <PokeList\n                        pokeArray={pokeArray}\n                        pokemonFiltered={pokemonFiltered}\n                        inputValue={value}\n                    />\n                </main>\n            );\n        }\n    }\n}\n\nHome.propTypes = {\n    inputValue: PropTypes.string || PropTypes.number,\n    findMatches: PropTypes.func.isRequired,\n    fillInput: PropTypes.bool,\n    pokeArray: PropTypes.array.isRequired,\n    pokemonFiltered: PropTypes.array.isRequired,\n    value: PropTypes.string\n}\n\n\nexport default Home;","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/PokeDetail.css';\n\nclass PokeDetail extends Component {\n    render() {\n        const { pokeArray, match } = this.props;\n        if (this.props.pokeArray.length >= 1) {\n            const filterID = parseInt(match.params.id);\n            const pokemon = pokeArray.filter(item => item.id === filterID);\n            const myPokemon = pokemon[0];\n\n            let firstEvolution = myPokemon.evolution_chain.chain.evolves_to.length !== 0 ?\n                myPokemon.evolution_chain.chain.evolves_to[0].species.name : null;\n            let secondEvolution = myPokemon.evolution_chain.chain.evolves_to[0].evolves_to.length !== 0 ?\n                myPokemon.evolution_chain.chain.evolves_to[0].evolves_to[0].species.name : null;\n\n            let evolutionChain;\n            if (firstEvolution !== null && myPokemon.name === myPokemon.evolution_chain.chain.species.name) {\n                evolutionChain = `${myPokemon.evolution_chain.chain.species.name} evolves into ${firstEvolution}`\n            } else if (secondEvolution !== null && myPokemon.name === firstEvolution) {\n                evolutionChain = `${firstEvolution} evolves from ${myPokemon.evolution_chain.chain.species.name} -\n                ${firstEvolution} evolves into ${secondEvolution}`\n            } else if (secondEvolution === null && myPokemon.name === firstEvolution) {\n                evolutionChain = `${firstEvolution} evolves from ${myPokemon.evolution_chain.chain.species.name}`\n            } else if (secondEvolution !== null && myPokemon.name === secondEvolution) {\n                evolutionChain = `${secondEvolution} evolves from ${firstEvolution}`\n            } else {\n                evolutionChain = 'This Pokemon has no evolutions! Ƶƶ(☄￣▵—▵￣)'\n            }\n\n            return (\n                <Fragment>\n                    <div className=\"details-container\">\n                        <h1 className=\"pokemon-name\">{myPokemon.name}</h1>\n                        <div className=\"pokeinfo-container\">\n                            <div className=\"pokeimg-container\">\n                                <img\n                                    src={myPokemon.sprites.front_default}\n                                    alt={`${myPokemon.name} front`}\n                                    title={`${myPokemon.name} front`}\n                                />\n                                <img\n                                    src={myPokemon.sprites.back_default}\n                                    alt={`${myPokemon.name} back`}\n                                    title={`${myPokemon.name} back`} />\n                            </div>\n                            <div className=\"pokeinfo\">\n                                <p>Height: {myPokemon.height / 10} m</p>\n                                <p>Weight: {myPokemon.weight / 10} kg</p>\n                                <ul>Abilites:\n                        {myPokemon.abilities.map((ability, i) => {\n                                        return (\n                                            <li key={i} className=\"abilities-item\">\n                                                {ability.ability.name}\n                                            </li>\n                                        );\n                                    })}\n                                </ul>\n                                <p className=\"evochain-info\">{evolutionChain}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <Link to=\"/\" className=\"back-btn\">Home</Link>\n                </Fragment>\n            );\n        } else {\n            return (\n                <span>😱</span>\n            );\n        }\n    }\n}\n\nPokeDetail.propTypes = {\n    pokeArray: PropTypes.array,\n    match: PropTypes.object\n}\n\nexport default PokeDetail;","import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './Home.js';\nimport PokeDetail from './PokeDetail.js';\nimport '../stylesheets/App.css';\n\nconst evoChain = [];\nconst species = [];\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pokeArray: JSON.parse(localStorage.getItem(\"pokemon\")) || [],\n            pokemonFiltered: [],\n            value: '',\n            fillInput: false,\n        }\n\n        this.findMatches = this.findMatches.bind(this);\n        this.hideLabel = this.hideLabel.bind(this);\n    }\n\n    componentDidMount() {\n        const pokemonsFromFetch = [];\n        if (this.state.pokeArray.length === 0) {\n            for (let i = 1; i < 26; i++) {\n                fetch(`https://pokeapi.co/api/v2/pokemon/${i}/`)\n                    .then(res => res.json())\n                    .then(data => {\n                        pokemonsFromFetch.push(data);\n                        this.getSpecies(data.species.url, pokemonsFromFetch)\n                    })\n                    .catch(error => {\n                        console.log('Hubo un problema con la petición: ' + error.message)\n                    })\n            }\n        }\n    }\n\n    getSpecies(url, pokeArray) {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => {\n                species.push(data)\n                this.getEvoChain(data.evolution_chain.url, pokeArray, species)\n            })\n    }\n\n    getEvoChain(url, pokeArray, species) {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => {\n                evoChain.push(data);\n                this.setPokeArray(pokeArray, species, evoChain)\n            })\n    }\n\n    setPokeArray(pokeArray, species, evoChain) {\n        const pokeArraySorted = pokeArray.sort((a, b) => a.id - b.id);\n        const pokeSpeciesSorted = species.sort((a, b) => a.id - b.id);\n        const pokeChainSorted = evoChain.sort((a, b) => a.id - b.id);\n        let pokeArrayCompleted = [];\n        for (let i = 0; i < pokeArraySorted.length; i++) {\n            pokeArrayCompleted[i] = {\n                ...pokeArraySorted[i],\n                species: pokeSpeciesSorted[i],\n                evolution_chain: pokeChainSorted[i]\n            }\n\n            if (pokeArrayCompleted.length === 25) {\n                localStorage.setItem(\"pokemon\", JSON.stringify(pokeArrayCompleted));\n            }\n        }\n        this.setState({ pokemons: [...pokeArrayCompleted] })\n    }\n\n    hideLabel(event) {\n        return event !== '' ? true : false;\n    }\n\n    findMatches(e) {\n        const valueOnInput = e.target.value;\n        const pokemonFiltered = this.state.pokeArray.filter(pokemon => {\n            return pokemon.name.includes(valueOnInput.toLowerCase());\n        });\n\n        this.setState({\n            pokemonFiltered: pokemonFiltered,\n            fillInput: this.hideLabel(e.target.value),\n            value: valueOnInput,\n        })\n    }\n\n    render() {\n        const { pokeArray, pokemonFiltered, value, fillInput } = this.state;\n\n        return (\n            <Fragment>\n                <Switch>\n                    <Route\n                        exact path=\"/\"\n                        render={props => <Home\n                            pokeArray={pokeArray}\n                            pokemonFiltered={pokemonFiltered}\n                            value={value}\n                            fillInput={fillInput}\n                            findMatches={this.findMatches}\n                        />}\n                    />\n                    <Route\n                        path=\"/pokemon/:id\"\n                        render={(props) => <PokeDetail\n                            match={props.match}\n                            pokeArray={pokeArray}\n                        />}\n                    />\n                </Switch>\n\n                <div className=\"top-corner top-corner__left\"></div>\n                <div className=\"top-corner top-corner__right\"></div>\n                <div className=\"bottom-corner bottom-corner__left\"></div>\n                <div className=\"bottom-corner bottom-corner__right\"></div>\n            </Fragment>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './stylesheets/Fonts.css';\nimport './stylesheets/Settings.css';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}